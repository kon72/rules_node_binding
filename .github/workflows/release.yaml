# Cut a release whenever a new tag is pushed to the repo.
# You should use an annotated tag, like `git tag -a v1.2.3`
# and put the release notes into the commit message for the tag.
name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Mount bazel caches
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/bazel-disk-cache
            ~/.cache/bazel-repository-cache
            ~/.cache/xdg-cache
          key: >-
            bazel-cache-${{ matrix.os }}-
            ${{ hashFiles('.bazelrc', '.bazelversion', '**/BUILD', '**/BUILD.bazel', '**/*.bzl', 'WORKSPACE', 'WORKSPACE.bazel', 'WORKSPACE.bzlmod', 'MODULE.bazel', 'MODULE.bazel.lock') }}
          restore-keys: |
            bazel-cache-${{ matrix.os }}-
      - name: bazel test //...
        run: bazel --bazelrc=.github/workflows/ci.bazelrc --bazelrc=.bazelrc test //...
        env:
          ASPECT_RULES_JS_FROZEN_PNPM_LOCK: 1
          # bazelisk will download bazel to here
          XDG_CACHE_HOME: ~/.cache/xdg-cache
      - name: Prepare release notes and artifacts
        run: .github/workflows/release_prep.sh ${{ env.GITHUB_REF_NAME }} > release_notes.txt
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: ${{ inputs.prerelease }}
          # Use GH feature to populate the changelog automatically
          generate_release_notes: true
          body_path: release_notes.txt
          fail_on_unmatched_files: true
          files: rules_node_binding-*.tar.gz
